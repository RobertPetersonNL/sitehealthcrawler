class TestAdditionalAppFunctionality:
    def test_empty_input(self, client):
        response = client.get('/')
        assert response.status_code == 200
        assert b"Welcome to the Flask App" in response.data

    def test_invalid_route(self, client):
        response = client.get('/nonexistent')
        assert response.status_code == 404

    def test_method_not_allowed(self, client):
        response = client.post('/')
        assert response.status_code == 405

    def test_large_input(self, client):
        large_input = 'a' * 1000000
        response = client.get(f'/?input={large_input}')
        assert response.status_code == 200
        assert b"Input too large" in response.data

    def test_special_characters(self, client):
        special_chars = '!@#$%^&*()_+'
        response = client.get(f'/?input={special_chars}')
        assert response.status_code == 200
        assert special_chars.encode() in response.data

    def test_unicode_input(self, client):
        unicode_input = '你好世界'
        response = client.get(f'/?input={unicode_input}')
        assert response.status_code == 200
        assert unicode_input.encode() in response.data
